[mcu z]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571270F6A78-if00
restart_method: command

[stepper_z]
step_pin: z:gpio11
dir_pin: !z:gpio10
enable_pin: !z:gpio12
microsteps: 64
rotation_distance: 32
endstop_pin: ^z:gpio4
# endstop_pin: tmc2209_stepper_x:virtual_endstop
# homing_retract_dist: 0
position_endstop: 0
position_max: 125
position_min: -1.0
homing_speed: 10

[tmc2209 stepper_z]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 0
run_current: 0.8
hold_current: 0.8
stealthchop_threshold: 500
# diag_pin: ^gpio4
# driver_SGTHRS: 100

[stepper_z1]
step_pin: z:gpio6
dir_pin: z:gpio5
enable_pin: !z:gpio7
microsteps: 64
rotation_distance: 32
#endstop_pin: ^z:gpio3
# endstop_pin: tmc2209_stepper_y:virtual_endstop
# homing_retract_dist: 0
#position_endstop: 0
#position_max: 235
#homing_speed: 50

[tmc2209 stepper_z1]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 2
run_current: 0.8
hold_current: 0.8
stealthchop_threshold: 500
diag_pin: ^z:gpio3
driver_SGTHRS: 100

[stepper_z2]
step_pin: z:gpio19
dir_pin: z:gpio28
enable_pin: !z:gpio2
microsteps: 64
rotation_distance: 32
# endstop_pin: ^gpio25
# position_endstop: 0
#endstop_pin: probe:z_virtual_endstop
#position_min: -2.0
#position_max: 250
#homing_speed: 12

[tmc2209 stepper_z2]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 1

run_current: 0.8
hold_current: 0.8
stealthchop_threshold: 500

# [extruder]
# step_pin: gpio14
# dir_pin: !gpio13
# enable_pin: !gpio15
# microsteps: 16
# rotation_distance: 33.500
# nozzle_diameter: 0.4
# filament_diameter: 1.75
# heater_pin: gpio23
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: gpio27
# control: pid
# pid_Kp: 22.2
# pid_Ki: 1.08
# pid_Kd: 114
# min_temp: 0
# max_temp: 300
# max_extrude_cross_section:2

# [tmc2209 extruder]
# uart_pin: gpio9
# tx_pin: gpio8
# uart_address: 3
# run_current: 0.650
# hold_current: 0.500
# stealthchop_threshold: 999999

# [filament_switch_sensor runout_sensor]
# switch_pin: ^gpio16
# pause_on_runout: True

# [filament_motion_sensor smart_sensor]
# switch_pin: ^gpio16
# detection_length: 2.5

[heater_bed]
heater_pin: z:gpio29
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: z:gpio26
control: pid
pid_Kp: 54.027
pid_Ki: 1.464
pid_Kd: 297.33
min_temp: 0
max_temp: 130

# [fan]
# pin: gpio17

# [heater_fan hotend_fan]
# pin: gpio18
# heater: extruder
# heater_temp: 50.0

# [heater_fan controller_fan]
# pin: gpio20
# heater: heater_bed
# heater_temp: 45.0

# [printer]
# kinematics: cartesian
# max_velocity: 500
# max_accel: 3000
# max_z_velocity: 25
# max_z_accel: 30

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29

# [neopixel board_rgb]
# pin: gpio24
# chain_count: 1
# color_order: GRB
# initial_RED: 0.3
# initial_GREEN: 0.3
# initial_BLUE: 0.3

########################

#####################################################################
# 	Probe
#####################################################################

[probe]
##	This probe is not used for Z height, only Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, add change pin to !z:P0.10
#pin: ^z:P0.10
pin: ^EBBCan:PA5
#pin: ^!toolhead:gpio12  # ES0 Test

# Values for ZeroClick
# Determined from CAD.
# ZeroClick probe position is 7mm from edge.  
# Magnet center is 5mm from edge.
# 9mm between magnet centers.  
# 4.5mm offset + 5mm - 7 --> 2.5mm offset from center of ZeroClick
# 20.95mm X offset from center of toolhead to center of ZeroClick; 21 - 2.5 is -18.5 X offset
# From CAD: 18.2mm Y offset.
x_offset: -18.5
y_offset: -18.2

# Reduce the Z offset if the nozzle hits early, with z>0.5 with a 0.5-thick business car.
# Increase the Z offset if the nozzle is not low enough at Z=0.5 with a card below.
z_offset: 10.4


speed: 20.0
lift_speed: 50.0
samples: 3
samples_result: median
sample_retract_dist: 1.0
# Was: 0.006
samples_tolerance: 0.021
samples_tolerance_retries: 3

[safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# Previously, was 131, 28, with the right-side endstop.
#home_xy_position: 131, 28
home_xy_position: 60, 168.4
speed:100
z_hop:4

[z_tilt]
#z_positions:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
# Original ones:
# z_positions:
#     164, 12
#     -44, 12
#     60, 135
# Original (2022-02-27):
# z_positions:
#     214, 12
#     -94, 12
#     60, 135
# Modified (2022-02-27+):
# z_positions:
#     218.24, 12
#     -96.76, 12
#     60.74, 135
# Before, Was:
#z_positions:
#     214, 12
#     -94, 12
#     60, 135
z_positions:
     229, 12
     -109, 12
     60, 185


#points:
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.

# Points for ZeroClick
points:
    25, 5
    155, 5
    90, 140

#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
speed: 200

#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
horizontal_move_z: 15

#retries: 0
#   Number of times to retry if the probed points aren't within
#   tolerance.
retries: 4

#retry_tolerance: 0
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.
retry_tolerance: 0.01