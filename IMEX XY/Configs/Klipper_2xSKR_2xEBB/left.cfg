[stepper_x]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 64
rotation_distance: 40
endstop_pin: ^gpio4
position_endstop: 0
position_min: -0.1
position_max: 165
homing_speed: 50
homing_retract_dist: 3.0
homing_retract_speed: 10.0

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.65
stealthchop_threshold: 999999

[stepper_y]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 64
rotation_distance: 40
#endstop_pin: ^gpio3
endstop_pin: ^EBBCan:PC13
position_endstop: 170
position_min: -0.1
position_max: 170.1
homing_speed: 50
homing_retract_dist: 3.0
homing_retract_speed: 10.0

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.65
stealthchop_threshold: 999999


# Use the config below to set up a dummy Z, so that Klipper will start
# in any kinematics that requires a Z drive to be defined.
# [stepper_z]
# # Stepper port labeled 'Z' with Z endstop
# step_pin: gpio19
# dir_pin: gpio28
# enable_pin: !gpio2
# microsteps: 64
# rotation_distance: 40
# # Note: flipped pin, as this isn't actually connected, but would be expecting NC.
# endstop_pin: !gpio25
# position_endstop: 0.0
# position_max: 160

# [tmc2209 stepper_z]
# uart_pin: gpio9
# tx_pin: gpio8
# uart_address: 1
# run_current: 0.580
# stealthchop_threshold: 999999